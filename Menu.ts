import readlineSync from 'readline-sync';
import { colors } from './src/util/Colors';



export function main(){

    let opcao, id, nome, artista, genero, musica, playlist;
    let rock, pop: string;
    const generos = ['Rock', 'Pop']

    let continuar = true;

    while(continuar){
        console.log(colors.fg.magenta)
        console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~');
        console.log('                                                     ');
        console.log(colors.fg.whitestrong)
        console.log('                 Midnight Tracks üåô                  ');
        console.log(colors.fg.magenta);
        console.log('                                                     ');
        console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~');
        console.log(colors.fg.whitestrong)
        console.log('              "Sintonize na nossa vibe!"             ');
        console.log('                                                     ');
        console.log('\n            1 - Listar todas as m√∫sicas            ');
        console.log('\n            2 - Exibir sua m√∫sica por ID           ');
        console.log('\n            3 - Adicionar uma nova m√∫sica          ');
        console.log('\n            4 - Atualizar sua playlist             ');
        console.log('\n            5 - Excluir uma m√∫sica da playlist     ');
        console.log('\n            0 - Sair                               ');
        console.log('                                                     ');
        console.log(colors.fg.magenta)
        console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~');
        console.log(colors.reset);

        console.log('Digite a opcao desejada: ');
        opcao = readlineSync.questionInt('');


        switch(opcao) {
            case 1:
                // Listar m√∫sica

                keypress();
                break;
            case 2:
                // Listagem de m√∫sicas
                console.log('\nüåô M√∫sica: ');

                keypress();
                break;

            case 3:
                // Adc nova m√∫sica
                console.log('\nüåô Digite o nome da m√∫sica: ');
                nome = readlineSync.question('');

                // Gen√™ro
                console.log('\n- Digite o g√™nero: ');
                genero = readlineSync.question('');

                // Artista
                console.log('\n- Digite o artista: ');
                artista = readlineSync.question('');

                // Criando a m√∫sica para adicionar
                switch (musica) {
                    case 1:
                        //
                        break;
                    case 2:
                        
                        break;
                    default:
                        console.log(colors.fg.red);
                        console.log('\nG√™nero inv√°lido! Por favor, escolha entre Rock ou Pop.');
                        console.log(colors.reset);
                        keypress();
                        break;

                }
                
                console.log('\nM√∫sica adicionada com sucesso!');

                keypress();
                break;

            case 4:
                // Atualizar a playlist
                console.log('\nüåô Digite a m√∫sica que deseja alterar: ');
                //id = readlineSync.question('');

                keypress();
                break;


            //Continua√ß√£o do Switch Op√ß√£o
            case 5:
                // Deletar uma m√∫sica
                console.log('\nüëæ Qual musica deseja remover? ');
                //id = readlineSync.question('');
                    
                keypress();
                break;

            case 0:
                console.log(colors.fg.whitestrong);
                console.log('\n\tüåô Saindo do sistema... volte sempre! üåô');
                console.log(colors.reset);
                console.log(colors.fg.magentastrong);
                console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-=-');
                console.log(colors.reset);

                continuar = false;
                about();
                break;

            default:
                console.log(colors.fg.whitestrong);
                console.log('\n\tOP√á√ÉO INV√ÅLIDA! ');
                console.log(colors.reset);
               
                keypress();
                break;
        }
    }
    
}

function keypress(): void {
    console.log("\nPressione enter para continuar...");
    readlineSync.prompt();
}

export function about(): void {
    console.log(colors.bg.black, colors.fg.whitestrong)
    console.log('\n             Desenvolvido por: ');
    console.log('           Emily Cristiny Dias ‚ú®');
    console.log('           github.com/emilyestvz üëæ');
    console.log(colors.fg.magentastrong);
    console.log('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-=-');
    console.log(colors.reset);
}


main();